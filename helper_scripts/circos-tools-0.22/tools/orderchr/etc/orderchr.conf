
# define ideograms to consider for shuffling

#shuffle      = chr1,chr5,chrx
#shuffle_rx   = chr1[123]

# define the initial order of ideograms

init_order_rx = hs
#init_order = chr12,chr8,chr19

# define which ideograms in the shuffle set should remain static

#static_rx  = hs
#static     = chr12,chr8,chr19

# define data set and karyotype file

### random links
#links     = data/links.txt
#karyotype = data/karyotype.txt

### segmental duplications
#links = data/segdup.50k.nointra.txt
#karyotype = data/karyotype.human.txt

### dog vs human syntenic relationships
links     = ../bundlelinks/data/dog.vs.human.bundles.4.txt
karyotype = ../bundlelinks/data/karyotype.txt

# "minimize" or "maximize" number of link crossings?

optimize = minimize

<simulation>

# if set to "yes", must add "use = no" in round block to disable round
# if set to "no", must add "use = yes" in round block to enable round

default_round_use = no

<round>

use    = yes

# apply deterministic shuffle to initialize order
# - this algorithm respects the initial order set by init_order*

warmup = yes

# sort ideograms within initial order set by degree of connectivity?
sort_init = yes

</round>

<round>
use = yes
iterations = 1000
max_flips  = 2
min_flips  = 1
temp0      = 0.001
</round>

<round>
use = yes
iterations = r2
max_flips  = 1
min_flips  = 1
temp0      = r0.5
</round>

<round>
use = yes
iterations = r1
max_flips  = 1
min_flips  = 1
temp0      = r0.5
</round>

<round>
iterations = 1000
max_flips  = 1
min_flips  = 1
temp0      = r0.5
</round>

<round>
iterations = 2500
max_flips  = 1
min_flips  = 1
temp0      = r0.5
</round>

<round>
iterations = 2500
max_flips  = 1
min_flips  = 1
temp0      = r0.5
</round>

</simulation>
